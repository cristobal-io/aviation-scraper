#!/usr/bin/env node

"use strict";
process.env["DEBUG"] = "aviation-data*";

var program = require("commander");
var debug = require("debug")("aviation-data:cli");
var chalk = require("chalk");

var airportsJs = require("./src/airports.js");
var writeJson = airportsJs.writeJson;
var airlineDestinationPagesJS = require("./src/airline_destinations_pages.js");
var getAllDestinationsPages = airlineDestinationPagesJS.getAllDestinationsPages;
var ensureDirectoryExist = airlineDestinationPagesJS.ensureDirectoryExist;
var getScraperTypeForAll = require("./src/airline_scraper.js").getScraperTypeForAll;
var getAllDestinations = require("./src/airline_destinations.js").getAllDestinations;
var getAirportsData = airportsJs.getAirportsData;
var getAllAirportsByIata = require("./src/airports_iata.js").getAllAirportsByIata;

var airlinesLinksUrl = "https://en.wikipedia.org/wiki/List_of_airline_codes";
var airlineJs = require("./src/airline.js");
var callScraper = airlineJs.callScraper;
var getAllAirlinesData = airlineJs.getAllAirlinesData;
var airportsData, options;

program
  .version("0.0.1")
  .description("Retrieve airlines destinations and airports data.")
  .option("-l, --list", "List of airports with the link to the wikipedia page. (Saved to a single file)")
  .option("-d, --destinations", "Destinations of all the airlines listed on the wikipedia. (saved each airline with an individual JSON file)")
  .option("-a, --airports", "Saves the important data for each airport (saved in a single JSON file for each airport)")
  .option("-c, --companies", "Saves all the airline links and all the important information for each airline.")
  .option("-b, --base <basedir>", "the base directory where to save the files generated (default: tmp)", "./tmp")
  .option("-s, --save <save>", "this options allows you to save individual files for each airline, airport or destination (default:false)",false)
  .parse(process.argv);

if (!program.list && !program.destinations && !program.airports && !program.companies) {
  program.help();
}


if (program.list) {
  // we retrieve the list of airports by IATA pages.
  // this file is going to be saved at the specified route.
  // "./data/airports_list.json"
  ensureDirectoryExist(program.base, function () {
    debug("generating list of airports by iata");
    getAllAirportsByIata("", function (err, airportsData) {
      if (err) {
        throw err;
      }
      writeJson(airportsData, program.base + "/airports_list.json", function () {
        debug("airports_list saved");
      });
    });
  });
}

if (program.destinations) {
  options = {
    "urls": "https://en.wikipedia.org/w/index.php?title=Category:Lists_of_airline_destinations",
    "destinationsFile": program.base + "/destination_pages.json",
    "baseDir": program.base
  };

  debug("Generating destination files");
  getAllDestinationsPages(options, function (err, airlines) {
    if (err) {
      throw err;
    }

    debug("Destinations File Created");

    getScraperTypeForAll({
      "airlines": airlines,
      "destinationsFile": options.destinationsFile
    }, function (err, airlineScrapers) {
      if (err) {
        throw err;
      }

      debug("scrapers finished");

      getAllDestinations({
        airlines: airlineScrapers,
        baseDir: program.base,
        save: program.save
      }, function (err, destinations) {
        if (err) {
          throw err;
        }
        writeJson(destinations, program.base + "/airline_destinations.json", function () {
          debug("Routes Files Generated");
        });
      });

    });
  });
}
if (program.airports) {
  try {
    airportsData = require(program.base + "/airports_list.json");
    debug("Generating all airport files \n this is going to take a while...");
    getAirportsData({
      links: airportsData,
      baseDir: program.base,
      save: program.save
    }, function (err, data) {
      if (err) {throw err;}
      writeJson(data, program.base + "/airports.json", function() {
        debug("Saved all the data airports");
      });
    });
  } catch (err) {
    debug(("please generate first the list of airports."));
    debug(("Run:") + chalk.grey("'./aviation-data -l'"));

  }

}

if (program.companies) {
  callScraper(airlinesLinksUrl, "airlineLinks", function (err, airlinesLinks) {
    if (err) {
      throw err;
    }
    writeJson(airlinesLinks, program.base + "/airlines_links.json", function () {
      debug("airline companies links saved.");
      getAllAirlinesData(airlinesLinks, function (err, results) {
        if (err) {
          throw err;
        }
        writeJson(results, program.base + "/airlines_data.json", function () {
          debug("airlines saved.");
        });
      });
    });
  });
}
